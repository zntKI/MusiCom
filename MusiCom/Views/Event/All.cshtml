@using MusiCom.Core.Models.Event;
@model EventAllQueryModel

@{
    ViewBag.Title = "Events";
}

<h2 class="text-center">@ViewBag.Title</h2>
@if (User.IsInRole("Artist"))
{
    <a style="align-content: center; margin-top: 5px; margin-bottom: 5px" class="btn btn-success" asp-controller="Event" asp-action="Add">Add</a>
}
<hr />

<form method="get">
    <div class="row">
        <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="Genre"></label>
                <select asp-for="Genre" class="form-control">
                    <option value="">All</option>
                    @foreach (var genre in Model.Genres)
                    {
                        <option value="@genre">@genre</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="...">
        </div>

        <div class="col-md-3">
            <div class="form-group mt-4 p-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>

@if (!Model.Events.Any())
{
    <h2 class="text-center">No houses found by the given criteria!</h2>
}



<div class="row">
        <partial name="_AllPartial" model="@Model.Events" />
</div>



@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalEventsCount /
        EventAllQueryModel.EventsPerPage);
}


<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Event"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-genre="@Model.Genre"
           asp-route-searchTerm="@Model.SearchTerm"><<</a>
    </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Events.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Event"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-genre="@Model.Genre"
           asp-route-searchTerm="@Model.SearchTerm">>></a>
    </div>
</div>